{
  "Error Reporting On":{
    "prefix": "er",
    "body": [
      "ini_set('display_errors', 1);",
      "ini_set('display_startup_errors', 1);",
      "error_reporting(E_ALL);"
    ],
    "description": "Display All PHP Errors"
  },
  "Pre, Print_r with Exit":{
    "prefix": "ppe",
    "body": [
      "echo \"<br><pre>\";",
      "print_r(${1:});",
      "exit(\"\nprint_r exit in <b>\" . __FILE__ . \"</b> on line <b>\" . __LINE__ . \"</b>\");"
    ],
    "description": "Pre, Print_r with Exit"
  },
  "Pre with Print_r":{
    "prefix": "pp",
    "body": [
      "echo \"<pre>\";",
      "print_r(${1:});",
      "echo \"</pre>\";"
    ],
    "description": "Pre with Print_r"
  },
  "Ternary Operator":{
    "prefix": "ter",
    "body": [
      "$${1:veriable} = ${2:condition} ? ${3:if_true} : ${4:if_false};"
    ],
    "description": "Ternary Operator"
  },
  "Function":{
    "prefix": "fn",
    "body": [
      "function ${1:functionName}()",
      "{",
      "    ${2:// Your Code}",
      "}"
    ],
    "description": "Function"
  },
  "Function with argument":{
    "prefix": "fna",
    "body": [
      "function ${1:functionName}(${2:Type} $${3:args})",
      "{",
      "    ${4:// Your Code}",
      "}"
    ],
    "description": "Function with argument"
  },
  "Index Array":{
    "prefix": "ar",
    "body": [
      "['${1:value1}', '${2:value2}', '${3:value3}', '${4:value4}', '${5:value5}'];"
    ],
    "description": "Index Array"
  },
  "Associative Array":{
    "prefix": "ark",
    "body": [
      "['${1:key1}' => '${2:value1}', '${3:key2}' => '${4:value2}', '${5:key3}' => '${6:value3}'];"
    ],
    "description": "Associative Array"
  },
  "Doc Comment for Class":{
    "prefix": "cc",
    "body": [
      "/**",
      " * ${1:ClassName}",
      " * ",
      " * @package ${1:ClassName}",
      " * @version 1.0.0 ${2:\n * @author ${3:Your Name} <${4:your_mail@mail.com}>}",
      " * @access public ${5:\n * @property $${6:data_member}}",
      " * @method ${7:__construct}",
      " * ",
      " */"
    ],
    "description": "Doc Comment for Class"
  },
  "Class":{
    "prefix": "cl",
    "body": [
      "class ${1:ClassName}",
      "{",
      "\t${2:// Your Code}",
      "}"
    ],
    "description": "Class"
  },
  "Class Extends":{
    "prefix": "cle",
    "body": [
      "class ${1:ClassName} extends ${2:ParentClass}",
      "{",
      "\t${3:// Your Code}",
      "}"
    ],
    "description": "Class Extends"
  },
  "Class Interfaces":{
    "prefix": "cli",
    "body": [
      "class ${1:ClassName} implements ${2:Interfaces}",
      "{",
      "\t${3:// Your Code}",
      "}"
    ],
    "description": "Class Interfaces"
  },
  "Class Extends with Interfaces":{
    "prefix": "clei",
    "body": [
      "class ${1:ClassName} extends ${2:ParentClass} implements ${3:Interfaces}",
      "{",
      "\t${4:// Your Code}",
      "}"
    ],
    "description": "Class Extends with Interfaces"
  },
  "__construct":{
    "prefix": "__c",
    "body": [
      "public function ${1:__construct}(${2})",
      "{",
      "\t${3:// Your Code}",
      "}"
    ],
    "description": "__construct()"
  },
  "Public Function":{
    "prefix": "pf",
    "body": [
      "public function ${1:functionName}()",
      "{",
      "\t${2:// Your Code}",
      "}"
    ],
    "description": "Public Function"
  },
  "Public Static Function":{
    "prefix": "psf",
    "body": [
      "public static function ${1:functionName}()",
      "{",
      "\t${2:// Your Code}",
      "}"
    ],
    "description": "Public Static Function"
  },
  "Read CSV File":{
    "prefix": "csvread",
    "body": [
      "try {",
      "\t\\$storeCSVData = [];\n${1:    // if ((\\$file = fopen(\\$_FILES['csv']['tmp_name'], 'r')) !== FALSE) :}\n${2:    if ((\\$file = fopen('${3:test}.csv', 'r')) !== FALSE) :}",
      "\t\t\\$header = fgetcsv(\\$file, 10000, ','); # Read the header",
      "\t\twhile ((\\$data = fgetcsv(\\$file, 1000, ',')) !== FALSE) :",
      "\t\t\t\\$storeCSVData[] = \\$data;",
      "\t\tendwhile;",
      "\t\tfclose(\\$file);",
      "\tendif;",
      "\t${4:echo '<pre>';\n    print_r(\\$header); # Header\n    print_r(\\$storeCSVData); # Data\n    echo '</pre>';}",
      "} catch (Throwable \\$th) {",
      "\techo \\$th->getMessage(); exit;",
      "}",
    ],
    "description": "Read CSV File"
  },
  "Download Array to CSV File":{
    "prefix": "csvdownload",
    "body": [
      "try {",
      "\t\\$arr = [\n\t\t['Sl. No.' => 1, 'name' => 'One', 'email' => 'one@xyz.com'],\n\t\t['Sl. No.' => 2, 'name' => 'Two', 'email' => 'two@xyz.com'],\n\t];\n",
  
      "\t\\$filename = 'export.csv';",
      "\theader('Content-Type: application/csv');",
      "\theader('Content-Disposition: attachment; filename={\\$filename};');\n",
      
      "\t\\$file = fopen('php://output', 'w');",
      "\t\\$header = array_keys(\\$arr[0]); # Get Header from array.",
      "\tfputcsv(\\$file, \\$header, ','); # Add Header in CSV file.\n",
  
      "\tforeach (\\$arr as \\$row) :",
      "\t\tfputcsv(\\$file, \\$row, ',');",
      "\tendforeach;",
      "\tfclose(\\$file);",
      "} catch (Throwable \\$th) {",
      "\techo \\$th->getMessage(); exit;",
      "}"
    ],
    "description": "Download Array to CSV File"
  },
}
